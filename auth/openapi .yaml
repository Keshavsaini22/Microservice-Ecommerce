openapi: "3.0.0"
info:
  title: Ecommerce-Microservice

  version: "1.0.0"
  description: Auth Service
servers:
  - url: http://localhost:8080/
paths:
  /signup:
    post:
      tags:
        - Auth
      summary: Register a new User
      description: Creates a new User
      requestBody:
        description: Request to create user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        "401":
          description: Email or password not filled
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User email not found
        "409":
          description: Email already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email already exist
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /signin:
    post:
      tags:
        - Auth
      summary: Login User
      description: Login User
      requestBody:
        description: Request to login user
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
        required: true
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    type: object
                    $ref: "#/components/schemas/UserSchema"
        "401":
          description: Email or password not filled
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User credentials not found
        "404":
          description: User doesn't exist or incorrect password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Incorrect Password
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /user:
    put:
      tags:
        - User
      summary: Edit the user information
      description: Edit the user information
      requestBody:
        description: Request to edit user info
        content:
          application/json:
            schema:
              $ref: " #/components/schemas/UserSchema"
        required: true
      responses:
        "201":
          description: User edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    type: object
                    $ref: "#/components/schemas/UserSchema"
        "409":
          description: User doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Delivery doesn't exist
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    UserSchema:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        phone:
          type: string
        image:
          type: string
        role:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            pincode:
              type: string
            country:
              type: string
        createdAt:
          type: string
          format: date-time
          description: Creation date and time
          example: "2023-07-25T08:30:00Z"
    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - name
        - email
        - password
