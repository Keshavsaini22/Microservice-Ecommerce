openapi: "3.0.0"
info:
  title: Ecommerce-Microservice

  version: "1.0.0"
  description: Product Service
servers:
  - url: http://localhost:8080/
paths:
  /product:
    post:
      tags:
        - Product
      summary: Add a new product
      description: Add a new product
      requestBody:
        description: Request to add new product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductSchema"
        required: true
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSchema"
        "401":
          description: All data is not provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Amount is missing

        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - Product
      summary: Get all cart of particular user
      description: Get all cart of particular user
      responses:
        "200":
          description: All cart data fetched
          content:
            application/json:
              schema:
                type: array

        "209":
          description: No data exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No data exist
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /cart?cartId:
    delete:
      tags:
        - Cart
      summary: Delete the entry of cart
      description: Delete the entry of cart
      responses:
        "200":
          description: Data is deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        "409":
          description: Cart doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Cart doesn't exist
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tags:
        - Cart
      summary: Update the cart
      description: Update the cart
      responses:
        "200":
          description: Cart is updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSchema"
        "409":
          description: Cart doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Cart doesn't exist
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    ProductSchema:
      type: object
      properties:
        retailerId:
          type: string
        name:
          type: string
        desc:
          type: string
        price:
          type: number
        stock:
          type: number
        category:
          type: string
        size:
          type: number
        images:
          type: array
          items:
            type: string
